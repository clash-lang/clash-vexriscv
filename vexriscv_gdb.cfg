# Execute using:
#
#   gdb --command=vexriscv_gdb.cfg
#

# SPDX-FileCopyrightText: 2024 Google LLC
#
# SPDX-License-Identifier: CC0-1.0

# Assume "print_a" is running on the CPU
echo >>> file "target/riscv32imc-unknown-none-elf/debug/print_a"\n
file "target/riscv32imc-unknown-none-elf/debug/print_a"

# Work around issues where simulation is too slow to respond to keep-alive messages,
# confusing either OpenOCD or GDB. Note that it will still complain about "missed"
# deadlines, but it won't fail..
echo >>> set remotetimeout unlimited\n
set remotetimeout unlimited

# Connect to OpenOCD
echo >>> target extended-remote :3333\n
target extended-remote :3333

# List registers
echo >>> i r\n
i r

# break on main function entrance
echo >>> break main\n
break main

# Jump to start address, should run until it hits main
echo >>> jump _start\n
jump _start

# Run until we hit function "done", meaning it should have printed "a"
echo >>> disable 1\n
disable 1
echo >>> break print_a::done\n
break print_a::done
echo >>> continue\n
continue
echo >>> disable 2\n
disable 2

# Load program
echo >>> file "target/riscv32imc-unknown-none-elf/debug/print_b"\n
file "target/riscv32imc-unknown-none-elf/debug/print_b"
echo >>> load\n
load

# Jump to start address. Should now output "b".
echo >>> break print_b::done\n
break print_b::done
echo >>> jump _start\n
jump _start

# Stop running GDB
echo >>> quit\n
quit
